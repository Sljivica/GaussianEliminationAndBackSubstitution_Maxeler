package gaussianelimination;

import com.maxeler.maxcompiler.v2.build.EngineParameters;
import com.maxeler.maxcompiler.v2.kernelcompiler.Kernel;
import com.maxeler.maxcompiler.v2.managers.engine_interfaces.CPUTypes;
import com.maxeler.maxcompiler.v2.managers.engine_interfaces.EngineInterface;
import com.maxeler.maxcompiler.v2.managers.engine_interfaces.InterfaceParam;
import com.maxeler.maxcompiler.v2.managers.standard.Manager;
import com.maxeler.maxcompiler.v2.managers.standard.Manager.IOType;

class GaussianEliminationManager {
	private static int vectorSize = 2;

	public static void main(String[] args) {
		EngineParameters params = new EngineParameters(args);
		Manager manager = new Manager(params);
		Kernel kernel = new GaussianEliminationKernel(manager.makeKernelParameters());
		manager.setKernel(kernel);
		manager.setIO(IOType.ALL_CPU);
		manager.addMaxFileConstant("vectorSize", vectorSize);
		manager.createSLiCinterface(interfaceDefault());
		manager.build();
	}

	static EngineInterface interfaceDefault() {
		EngineInterface ei = new EngineInterface();
		InterfaceParam size = ei.addParam("size", CPUTypes.INT32);
		ei.setTicks("GaussianEliminationKernel", size);
		ei.setStream("inVector", CPUTypes.FLOAT, vectorSize * size * CPUTypes.FLOAT.sizeInBytes());
		ei.setStream("outVector", CPUTypes.FLOAT, vectorSize * size * CPUTypes.FLOAT.sizeInBytes());
		return ei;
	}
}

